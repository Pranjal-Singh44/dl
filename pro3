import numpy as np
import tensorflow as tf
from tensorflow.keras import layers
from tensorflow.keras.datasets import reuters
from tensorflow.keras.utils import to_categorical

(train_data, train_labels), (test_data, test_labels) = reuters.load_data(num_words=10000)

def vectorize_sequences(sequences, dimension=10000):
    results = np.zeros((len(sequences), dimension))  
    for i, sequence in enumerate(sequences):
        results[i, sequence] = 1
    return results

x_train = vectorize_sequences(train_data) 
x_test = vectorize_sequences(test_data)   

y_train = to_categorical(train_labels)
y_test = to_categorical(test_labels)

model = tf.keras.Sequential([
    layers.Dense(64, activation='relu', input_shape=(10000,)),  
    layers.Dense(64, activation='relu'),  
    layers.Dense(46, activation='softmax')  
])

model.compile(optimizer='rmsprop',  
              loss='categorical_crossentropy',  
              metrics=['accuracy'])  

history = model.fit(x_train, y_train, epochs=10, batch_size=512, validation_split=0.2)

test_loss, test_acc = model.evaluate(x_test, y_test)

print(f"Test Loss: {test_loss}, Test Accuracy: {test_acc}")
